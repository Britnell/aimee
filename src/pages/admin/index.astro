---

---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/alpine.js" defer ></script>
</head>
<body>
    <header class="flex justify-between">
        <h1>Admin</h1>
        <a href="/sql">back</a>
    </header>
    
    <script is:inline> 
        document.addEventListener("alpine:init", () => {
            Alpine.data("chat", () => ({
                query: '',
                data: {},
                reply: '',
                async submit(ev){
                    const formdata = new FormData(ev.target);
                    const q = formdata.get('query')
                    const resp = await fetch('/admin/api',{
                        method: 'POST',
                        body: JSON.stringify({ query: q })
                    }).then(res=>res.json())
                    this.reply = resp.reply
                    this.data = resp.data
                }
            }))
        })
    </script>
    <p>Here you can make changes to your app and update</p>
    <div x-data="chat" @submit.prevent="submit">
        <form>
            <div class="grid place-items-center py-8">
                <div>
                    <label for="query" class=" text-sm">Admin COmmand</label>
                    <div class="flex gap-2">
                        <input type="text" id="query" name="query" placeholder="Enter your query..."  autofocus  class="max-w-[500px] p-1 border rounded-sm "/>
                        <button class=" bg-blue-100 px-4 py-1 rounded-sm ">Go</button>
                    </div>
                </div>
            </div>
        </form>
        <span>Reply:</span>
        <p x-text="reply"></p>
        <span>Data:</span>
        <div class="flex flex-wrap gap-4">
            <template x-for="d in data">
                <div class="p-4 bg-blue-100 ">
                    <!-- <span x-text="JSON.stringify(d)"></span> -->
                    <template x-for="row in Object.entries(d)">
                        <div>
                            <span x-text="row[0]"></span> : <span x-text="row[1]"></span>
                        </div>
                    </template>
                </div>
            </template>
        </div>

        <!-- <pre x-text="JSON.stringify(data)"></pre> -->
    </div>
</body>
</html>